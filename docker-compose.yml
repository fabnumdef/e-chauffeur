version: "3"

services:
  dashboard:
    restart: always
    image: node:11-alpine
    working_dir: "/var/www/app"
    environment:
      - HOST=0.0.0.0
    command: sh -c "rm package-lock.json || npm i --only=production && npm run build && npm run start"
    env_file:
      - "environment.env"
    volumes:
      - "./dashboard:/var/www/app"
    labels:
      - "traefik.frontend.rule=Host:${DASHBOARD_HOST}"
      - "traefik.port=3000"

  driver:
    restart: always
    image: node:11-alpine
    working_dir: "/var/www/app"
    environment:
      - HOST=0.0.0.0
    command: sh -c "npm i --only=production && npm run build && npm run start"
    env_file:
      - "environment.env"
    volumes:
      - "./driver:/var/www/app"
    labels:
      - "traefik.frontend.rule=Host:${DRIVER_HOST}"
      - "traefik.port=3000"

  user:
    restart: always
    image: node:11-alpine
    working_dir: "/var/www/app"
    environment:
      - HOST=0.0.0.0
    command: sh -c "npm i --only=production && npm run build && npm run start"
    env_file:
      - "environment.env"
    volumes:
      - "./user:/var/www/app"
    labels:
      - "traefik.frontend.rule=Host:${USER_HOST}"
      - "traefik.port=3000"

  api:
    build: ./api
    restart: always
    command:
      "npm run serve"
    env_file:
      - "environment.env"
    labels:
      - "traefik.frontend.rule=Host:${API_HOST}"
      - "traefik.port=1337"
    depends_on:
      - mongo

  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - ./.mongo_database:/data/db

  reverse-proxy:
    image: traefik:alpine
    command: --docker
    ports:
      - "80:80"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
